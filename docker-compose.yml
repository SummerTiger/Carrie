version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: vending-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: vending_inventory
      MYSQL_USER: vending_user
      MYSQL_PASSWORD: vending_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - vending-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend Spring Boot API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vending-backend
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DATABASE_URL=jdbc:mysql://mysql:3306/vending_inventory?createDatabaseIfNotExist=true&useSSL=false
      - DATABASE_USERNAME=vending_user
      - DATABASE_PASSWORD=vending_pass
      - JWT_SECRET=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - vending-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vending-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - vending-network
    restart: unless-stopped

  # Prometheus (Optional - for metrics)
  prometheus:
    image: prom/prometheus:latest
    container_name: vending-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - vending-network
    profiles:
      - monitoring

  # Grafana (Optional - for visualization)
  grafana:
    image: grafana/grafana:latest
    container_name: vending-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - vending-network
    profiles:
      - monitoring

volumes:
  mysql_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  vending-network:
    driver: bridge
